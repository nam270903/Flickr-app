// Generated by view binder compiler. Do not edit!
package vn.edu.usth.flickrapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.flickrapp.R;

public final class ActivityFollowerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnClose;

  @NonNull
  public final Button btnFollow;

  @NonNull
  public final RoundedImageView imageAvatarFollow;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final TextView txtNameFollow;

  private ActivityFollowerBinding(@NonNull RelativeLayout rootView, @NonNull Button btnClose,
      @NonNull Button btnFollow, @NonNull RoundedImageView imageAvatarFollow,
      @NonNull ImageView imageView4, @NonNull TextView txtNameFollow) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnFollow = btnFollow;
    this.imageAvatarFollow = imageAvatarFollow;
    this.imageView4 = imageView4;
    this.txtNameFollow = txtNameFollow;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFollowerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFollowerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_follower, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFollowerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      Button btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnFollow;
      Button btnFollow = ViewBindings.findChildViewById(rootView, id);
      if (btnFollow == null) {
        break missingId;
      }

      id = R.id.imageAvatarFollow;
      RoundedImageView imageAvatarFollow = ViewBindings.findChildViewById(rootView, id);
      if (imageAvatarFollow == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.txtNameFollow;
      TextView txtNameFollow = ViewBindings.findChildViewById(rootView, id);
      if (txtNameFollow == null) {
        break missingId;
      }

      return new ActivityFollowerBinding((RelativeLayout) rootView, btnClose, btnFollow,
          imageAvatarFollow, imageView4, txtNameFollow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
